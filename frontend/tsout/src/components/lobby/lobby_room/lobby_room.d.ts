import { DwgElement } from '../../dwg_element';
import { DwgChatbox } from '../../chatbox/chatbox';
import { GameSettings, LobbyRoom, LobbyUser } from '../data_models';
import './lobby_room.scss';
import '../lobby_game_settings/lobby_game_settings';
import './room_user/room_user';
export declare class DwgLobbyRoom extends DwgElement {
    private room_name;
    private chatbox;
    private leave_room;
    private rename_input;
    private rename_room;
    private cancel_rename;
    private host_container;
    private players_container;
    private viewers_container;
    private settings_title;
    private num_players_current;
    private num_players_max;
    private settings_settings;
    private settings_description;
    private settings_button_container;
    private settings_settings_button;
    private settings_launch_interval_id;
    private settings_launch_button;
    private settings_game_status;
    private lobby_game_settings;
    private game_button_container;
    private game_resign_button;
    private game_rejoin_button;
    private is_host;
    private client_id;
    private settings_launching;
    private renaming_room;
    private room;
    private host_el;
    private player_els;
    private viewer_els;
    constructor();
    getChatbox(): DwgChatbox;
    protected parsedCallback(): void;
    setLaunching(launching: boolean): void;
    refreshRoom(room: LobbyRoom, is_host: boolean): void;
    setRoom(room: LobbyRoom, is_host: boolean, client_id: number, refresh_room?: boolean): void;
    updateSettings(new_settings: GameSettings): void;
    updateSettingsDependencies(): void;
    private getUserElement;
    clearRoom(): void;
    inRoom(): boolean;
    getRoom(): LobbyRoom;
    renameRoom(new_name: string, renamer_id: number): void;
    updateRoomDescription(new_description: string): void;
    hasPlayer(client_id: number): boolean;
    getClient(client_id: number): LobbyUser;
    getPlayer(client_id: number): LobbyUser;
    getHost(): LobbyUser;
    updatePing(client_id: number, ping: number): void;
    private updatePings;
    joinRoom(joinee: LobbyUser, join_as_player: boolean): void;
    leaveRoom(client_id: number, left_text: string): void;
    promoteUser(client_id: number, is_host: boolean): void;
    playerToViewer(client_id: number): void;
    viewerToPlayer(client_id: number): void;
    launchRoom(game_id: number): void;
    launchFailed(): void;
    gameOver(message: string): void;
    private openRename;
    private cancelRename;
    private submitRename;
}
